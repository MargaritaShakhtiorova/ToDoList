@using Microsoft.AspNetCore.Identity
@using To_Do_List.Areas.Identity.Data

@inject SignInManager<To_Do_ListUser> SignInManager
@inject UserManager<To_Do_ListUser> UserManager

<ul class="navbar-nav flex-grow-1" style="justify-content:end">
@if (SignInManager.IsSignedIn(User))
{
    <li class="nav-item" algin="center">
        <a id="usertasks" class="nav-link text-dark" asp-controller="UserTasks" asp-action="Index" title="Tasks">My tasks</a>
    </li>
    <li class="nav-item">
        <div id="manage" class="nav-link text-dark" title="Manage">@UserManager.GetUserName(User)</div>
    </li>
    <li class="nav-item">
        <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
            <button id="logout" type="submit" class="nav-link btn btn-link text-dark">Logout</button>
        </form>
    </li>
}
else
{
    <li class="nav-item">
        <a class="nav-link text-dark" id="register" asp-area="Identity" asp-page="/Account/Login">Log In</a>
    </li>
    <li class="nav-item">
        <a class="nav-link text-dark" id="login" asp-area="Identity" asp-page="/Account/Register">Sign Up</a>
    </li>
}
</ul>
